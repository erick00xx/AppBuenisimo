@model AppBuenisimo.Models.ViewModels.UsuarioHorariosViewModel

@{
    ViewBag.Title = "Horarios de " + Model.NombreUsuario;
    // var diasSemana = new SelectList(...); // Esto ya no es necesario aquí si usas Model.NuevoHorario.DiasSemanaOptions
}

<h2>@ViewBag.Title</h2>
<hr />

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["WarningMessage"] != null)
{
    <div class="alert alert-warning">@TempData["WarningMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@* --- Formulario para Agregar Nuevo Horario --- *@
<h4>Agregar Nuevo Horario</h4>
@using (Html.BeginForm("AgregarHorario", "Horarios", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.NuevoHorario.IdUsuario) // Esto asegura que IdUsuario se postee correctamente

    <div class="form-group">
        @Html.LabelFor(m => m.NuevoHorario.DiasSeleccionados, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @foreach (var dia in Model.NuevoHorario.DiasSemanaOptions)
            {
                <div class="checkbox-inline">
                    <label>
                        <input type="checkbox"
                               name="NuevoHorario.DiasSeleccionados"
                               value="@dia.Value"
                               @(Model.NuevoHorario.DiasSeleccionados != null && Model.NuevoHorario.DiasSeleccionados.Contains(dia.Value) ? "checked=\"checked\"" : "") />
                        @dia.Text
                    </label>
                </div>
            }
            @Html.ValidationMessageFor(m => m.NuevoHorario.DiasSeleccionados, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NuevoHorario.HoraEntrada, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.NuevoHorario.HoraEntrada, new { htmlAttributes = new { @class = "form-control", type = "time" } })
            @Html.ValidationMessageFor(m => m.NuevoHorario.HoraEntrada, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NuevoHorario.HoraSalida, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.NuevoHorario.HoraSalida, new { htmlAttributes = new { @class = "form-control", type = "time" } })
            @Html.ValidationMessageFor(m => m.NuevoHorario.HoraSalida, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NuevoHorario.PagoPorHora, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.NuevoHorario.PagoPorHora, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
            @Html.ValidationMessageFor(m => m.NuevoHorario.PagoPorHora, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NuevoHorario.FechaInicioVigencia, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.NuevoHorario.FechaInicioVigencia, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(m => m.NuevoHorario.FechaInicioVigencia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NuevoHorario.FechaFinVigencia, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.NuevoHorario.FechaFinVigencia, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(m => m.NuevoHorario.FechaFinVigencia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(m => m.NuevoHorario.Activo)
                @Html.LabelFor(m => m.NuevoHorario.Activo)
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Agregar Horario" class="btn btn-primary" />
        </div>
    </div>
}
<hr />

@* --- Lista de Horarios Asignados --- *@
@* (Sin cambios aquí) *@
<h4>Horarios Asignados</h4>
@if (Model.HorariosAsignados.Any())
{
    <table class="table table-condensed">
        <tr>
            <th>Día</th>
            <th>Entrada</th>
            <th>Salida</th>
            <th>Pago/Hora</th>
            <th>Vigente Desde</th>
            <th>Vigente Hasta</th>
            <th>Activo</th>
            <th>Acciones</th>
        </tr>
        @foreach (var horario in Model.HorariosAsignados)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => horario.DiaSemanaTexto)</td>
                <td>@Html.DisplayFor(modelItem => horario.HoraEntrada)</td>
                <td>@Html.DisplayFor(modelItem => horario.HoraSalida)</td>
                <td>@Html.DisplayFor(modelItem => horario.PagoPorHora)</td>
                <td>@horario.FechaInicioVigencia.ToString("dd/MM/yyyy")</td> @* Aplicando formato directo *@
                <td>@(horario.FechaFinVigencia.HasValue ? horario.FechaFinVigencia.Value.ToString("dd/MM/yyyy") : "Indefinido")</td>
                <td>@(horario.Activo ? "Sí" : "No")</td>
                <td>
                    @Html.ActionLink("Editar", "EditarHorario", "Horarios", new { idHorario = horario.IdHorario }, new { @class = "btn btn-warning btn-xs" })
                    @using (Html.BeginForm("EliminarHorario", "Horarios", new { idHorario = horario.IdHorario, idUsuario = Model.IdUsuario }, FormMethod.Post, new { @style = "display:inline;" }))
                    {
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger btn-xs" onclick="return confirm('¿Está seguro de que desea eliminar/desactivar este horario?');">Eliminar</button>
                    }
                </td>
            </tr>
        }
    </table>
}
else
{
    <p>No hay horarios asignados para este usuario.</p>
}

<p>
    @Html.ActionLink("Volver a Horarios", "Index")
</p>

@Scripts.Render("~/bundles/jqueryval")