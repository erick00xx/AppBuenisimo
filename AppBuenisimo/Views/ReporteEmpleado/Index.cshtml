@model AppBuenisimo.Models.ViewModels.ReporteEmpleadoModel

@{
    ViewBag.Title = "Reporte de Empleados";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- Agrega esto en la cabecera para Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container-fluid py-4">
    <h1 class="text-center mb-4">Reporte de Empleados</h1>

    <!-- Filtros -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form id="filtroForm">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label for="quincena">Quincena</label>
                        <select class="form-select" id="quincena" name="quincena">
                            <option value="Primera quincena">Primera quincena</option>
                            <option value="Segunda quincena">Segunda quincena</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="mes">Mes</label>
                        <input type="month" class="form-control" id="mes" name="mes" value="@DateTime.Now.ToString("yyyy-MM")" />
                    </div>
                    <div class="col-md-3">
                        <label for="anio">Año</label>
                        <input type="number" class="form-control" id="anio" name="anio" value="@DateTime.Now.Year" />
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="bi bi-funnel-fill me-2"></i>Aplicar Filtros
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Métricas -->
    <div class="row text-center mb-4">
        <div class="col-md-3"><div class="card bg-success text-white"><div class="card-body"><h6>Total empleados</h6><h3 id="totalEmpleados">@Model.TotalEmpleados</h3></div></div></div>
        <div class="col-md-3"><div class="card bg-warning text-dark"><div class="card-body"><h6>Tardanzas</h6><h3 id="tardanzasTotales">@Model.TardanzasTotales</h3></div></div></div>
        <div class="col-md-3"><div class="card bg-danger text-white"><div class="card-body"><h6>Faltas</h6><h3 id="faltasTotales">@Model.FaltasTotales</h3></div></div></div>
        <div class="col-md-3"><div class="card bg-info text-dark"><div class="card-body"><h6>Nómina total</h6><h3 id="nominaTotal">S/. @Model.NominaTotal.ToString("N2")</h3></div></div></div>
    </div>

    <!-- Gráficos avanzados -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card p-3">
                <h6 class="mb-3">Estado del Personal</h6>
                <div style="height: 220px">
                    <canvas id="chartEstadoPersonal"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card p-3">
                <h6 class="mb-3">Horas Trabajadas por Empleado</h6>
                <div style="height: 250px">
                    <canvas id="chartHorasTrabajadas"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabla de empleados -->
    <div class="card shadow-sm">
        <div class="card-body table-responsive">
            <table class="table table-hover">
                <thead class="table-light">
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Puesto</th>
                        <th>Tardanzas</th>
                        <th>Faltas</th>
                        <th>Estado</th>
                        <th>Detalle</th>
                    </tr>
                </thead>
                <tbody id="tablaEmpleados">
                    @foreach (var emp in Model.Empleados)
                    {
                        <tr>
                            <td>@emp.IdEmpleado</td>
                            <td>@emp.NombreCompleto</td>
                            <td>@emp.Puesto</td>
                            <td>@emp.Tardanzas</td>
                            <td>@emp.Faltas</td>
                            <td><span class="badge bg-success">@emp.Estado</span></td>
                            <td>
                                <a href="@Url.Action("DetallePagoQuincenal", "ReporteEmpleado", new { idEmpleado = emp.IdEmpleado, quincena = Model.Quincena, mes = Model.Mes, anio = Model.Anio })"
                                   class="btn btn-sm btn-outline-primary">Ver Detalle</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    const estadoData = @Html.Raw(Json.Encode(
        Model.Empleados.GroupBy(e => e.Estado).Select(g => new {
            Estado = g.Key,
            Cantidad = g.Count()
        })
    ));

    const horasData = @Html.Raw(Json.Encode(
        Model.Empleados.Where(e => e.HorasTrabajadas > 0).Select(e => new {
            Nombre = e.NombreCompleto,
            Horas = e.HorasTrabajadas
        })
    ));

    new Chart(document.getElementById('chartEstadoPersonal').getContext('2d'), {
        type: 'doughnut',
        data: {
            labels: estadoData.map(e => e.Estado),
            datasets: [{
                data: estadoData.map(e => e.Cantidad),
                backgroundColor: ['#198754', '#ffc107', '#dc3545']
            }]
        },
        options: {
            plugins: {
                legend: { position: 'bottom' }
            }
        }
    });

    new Chart(document.getElementById('chartHorasTrabajadas').getContext('2d'), {
        type: 'bar',
        data: {
            labels: horasData.map(e => e.Nombre),
            datasets: [{
                label: 'Horas',
                data: horasData.map(e => e.Horas),
                backgroundColor: '#0dcaf0'
            }]
        },
        options: {
            indexAxis: 'y',
            plugins: { legend: { display: false } },
            scales: {
                x: { beginAtZero: true }
            }
        }
    });
</script>
