@model AppBuenisimo.Models.ViewModels.HorarioFormViewModel

@{
    ViewBag.Title = "Editar Horario para " + Model.NombreUsuario;
}

<h2>@ViewBag.Title</h2>
<hr />

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@using (Html.BeginForm("EditarHorario", "Horarios", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.IdHorario)
    @Html.HiddenFor(m => m.IdUsuario)

    <div class="form-group">
        @Html.LabelFor(m => m.DiaSemana, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.DiaSemana, Model.DiasSemanaOptions, "Seleccione un día", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.DiaSemana, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.HoraEntrada, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.HoraEntrada, new { htmlAttributes = new { @class = "form-control", type = "time" } })
            @Html.ValidationMessageFor(m => m.HoraEntrada, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.HoraSalida, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.HoraSalida, new { htmlAttributes = new { @class = "form-control", type = "time" } })
            @Html.ValidationMessageFor(m => m.HoraSalida, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PagoPorHora, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.PagoPorHora, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
            @Html.ValidationMessageFor(m => m.PagoPorHora, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FechaInicioVigencia, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.FechaInicioVigencia, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(m => m.FechaInicioVigencia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FechaFinVigencia, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.FechaFinVigencia, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(m => m.FechaFinVigencia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(m => m.Activo)
                @Html.LabelFor(m => m.Activo)
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar Cambios" class="btn btn-primary" />
            @Html.ActionLink("Cancelar", "Horarios", new { idUsuario = Model.IdUsuario }, new { @class = "btn btn-default" })
        </div>
    </div>
}

    @Scripts.Render("~/bundles/jqueryval")